{"ast":null,"code":"import _asyncToGenerator from \"/Users/hoando/Desktop/BYU_W2022/CS260/Labs/creative-project-4/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  name: \"LoginAndRegisterComponent\",\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _username, _password, result;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _username = document.getElementById(\"username\").value;\n                _password = document.getElementById(\"password\").value;\n\n                if (!(_username === \"\" || _password === \"\")) {\n                  _context.next = 6;\n                  break;\n                }\n\n                alert(\"Username and password cannot be blank\");\n                return _context.abrupt(\"return\");\n\n              case 6:\n                _context.next = 8;\n                return axios.post(\"/api/users/login\", {\n                  username: _username,\n                  password: _password\n                });\n\n              case 8:\n                result = _context.sent;\n\n                if (!(result.status === 400)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                alert(\"Check your credentials!\");\n                return _context.abrupt(\"return\");\n\n              case 12:\n                if (!(result.status === 500)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                alert(\"Server error. Please try again later.\");\n                return _context.abrupt(\"return\");\n\n              case 15:\n                _this.$root.$data.isLoggedIn = true;\n                _this.$root.$data.currentUser = _username;\n                _this.$root.$data.currentFavorites = result.data.favorites;\n                document.getElementById(\"username\").value = \"\";\n                document.getElementById(\"password\").value = \"\";\n                _context.next = 25;\n                break;\n\n              case 22:\n                _context.prev = 22;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 22]]);\n      }))();\n    },\n    register: function register() {\n      var newUsername = document.getElementById(\"username\").value;\n      var newPassword = document.getElementById(\"password\").value;\n\n      if (newUsername === \"\" || newPassword === \"\") {\n        alert(\"Username and password cannot be blank\");\n        return;\n      }\n\n      var user = this.$root.$data.users.find(function (user) {\n        return user.username === newUsername;\n      });\n\n      if (user !== undefined) {\n        alert(\"User already exists!\");\n        return;\n      }\n\n      this.$root.$data.users.push({\n        username: newUsername,\n        password: newPassword\n      });\n      this.$root.$data.savedByUsers.push({\n        username: newUsername,\n        favorites: []\n      });\n      alert(\"New user successfully registered\");\n    },\n    logout: function logout() {\n      var _this2 = this;\n\n      this.$root.$data.savedByUsers.find(function (u) {\n        return u.username === _this2.$root.$data.currentUser;\n      }).favorites = this.$root.$data.currentFavorites; //save favs before logging out\n\n      this.$root.$data.currentUser = \"\";\n      this.$root.$data.currentFavorites = [];\n      this.$root.$data.currentDate = \"\";\n      this.$root.$data.isLoggedIn = false;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACAA,mCADA;AAEAC;AACAC,SADA,mBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAC,yBAFA,GAEAC,yCAFA;AAGAC,yBAHA,GAGAD,yCAHA;;AAAA,sBAKAD,oCALA;AAAA;AAAA;AAAA;;AAMAG;AANA;;AAAA;AAAA;AAAA,uBAUAC;AACAC,qCADA;AAEAC;AAFA,kBAVA;;AAAA;AAUAC,sBAVA;;AAAA,sBAeAA,qBAfA;AAAA;AAAA;AAAA;;AAgBAJ;AAhBA;;AAAA;AAAA,sBAmBAI,qBAnBA;AAAA;AAAA;AAAA;;AAoBAJ;AApBA;;AAAA;AAwBA;AACA;AACA;AAEAF;AACAA;AA7BA;AAAA;;AAAA;AAAA;AAAA;AA+BAO;;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA,KAlCA;AAmCAC,YAnCA,sBAmCA;AACA;AACA;;AACA;AACAN;AACA;AACA;;AAEA,6CACA;AAAA;AAAA,OADA;;AAGA;AACAA;AACA;AACA;;AACA;AACAE,6BADA;AAEAC;AAFA;AAIA;AACAD,6BADA;AAEAK;AAFA;AAIAP;AACA,KA3DA;AA4DAQ,UA5DA,oBA4DA;AAAA;;AACA,yCACA;AAAA;AAAA,OADA,EAEAD,SAFA,GAEA,iCAFA,CADA,CAGA;;AAEA;AACA;AACA;AACA;AACA;AArEA;AAFA","names":["name","methods","login","_username","document","_password","alert","axios","username","password","result","console","register","favorites","logout"],"sourceRoot":"src/components","sources":["LoginAndRegisterComponent.vue"],"sourcesContent":["<template>\n  <div id=\"login-page\">\n    <div id=\"input\" v-if=\"!this.$root.$data.isLoggedIn\">\n      <div id=\"username-wrapper\">\n        <input type=\"text\" id=\"username\" placeholder=\"Username\" />\n      </div>\n      <div></div>\n      <div id=\"password-wrapper\">\n        <input type=\"password\" id=\"password\" placeholder=\"Password\" />\n      </div>\n      <button id=\"login-button\" @click=\"login\">Login</button>\n      <button id=\"register-button\" @click=\"register\">Register</button>\n    </div>\n    <div v-if=\"this.$root.$data.isLoggedIn\">\n      You are logged in. Enjoy browsing\n      <div>\n        <button id=\"logout-button\" @click=\"logout\">Logout</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"LoginAndRegisterComponent\",\n  methods: {\n    async login() {\n      try {\n        let _username = document.getElementById(\"username\").value;\n        let _password = document.getElementById(\"password\").value;\n\n        if (_username === \"\" || _password === \"\") {\n          alert(\"Username and password cannot be blank\");\n          return;\n        }\n\n        let result = await axios.post(\"/api/users/login\", {\n          username: _username,\n          password: _password,\n        });\n\n        if (result.status === 400) {\n          alert(\"Check your credentials!\");\n          return;\n        }\n        if (result.status === 500) {\n          alert(\"Server error. Please try again later.\");\n          return;\n        }\n\n        this.$root.$data.isLoggedIn = true;\n        this.$root.$data.currentUser = _username;\n        this.$root.$data.currentFavorites = result.data.favorites;\n\n        document.getElementById(\"username\").value = \"\";\n        document.getElementById(\"password\").value = \"\";\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    register() {\n      let newUsername = document.getElementById(\"username\").value;\n      let newPassword = document.getElementById(\"password\").value;\n      if (newUsername === \"\" || newPassword === \"\") {\n        alert(\"Username and password cannot be blank\");\n        return;\n      }\n\n      let user = this.$root.$data.users.find(\n        (user) => user.username === newUsername\n      );\n      if (user !== undefined) {\n        alert(\"User already exists!\");\n        return;\n      }\n      this.$root.$data.users.push({\n        username: newUsername,\n        password: newPassword,\n      });\n      this.$root.$data.savedByUsers.push({\n        username: newUsername,\n        favorites: [],\n      });\n      alert(\"New user successfully registered\");\n    },\n    logout() {\n      this.$root.$data.savedByUsers.find(\n        (u) => u.username === this.$root.$data.currentUser\n      ).favorites = this.$root.$data.currentFavorites; //save favs before logging out\n\n      this.$root.$data.currentUser = \"\";\n      this.$root.$data.currentFavorites = [];\n      this.$root.$data.currentDate = \"\";\n      this.$root.$data.isLoggedIn = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n#login-page {\n  margin-top: 125px;\n}\n#username-wrapper,\n#password-wrapper {\n  margin-bottom: 20px;\n}\n\n#username,\n#password {\n  border: 2px solid gray;\n}\n\n#login-button,\n#register-button {\n  margin: 0 10px;\n}\n\n#logout-button {\n  margin: 20px 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}